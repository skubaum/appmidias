1. Comando para dar permissões
adb shell pm grant org.homesync.app android.permission.MANAGE_EXTERNAL_STORAGE

2. Comando para analisar o app
adb shell dumpsys package org.homesync.app

3. Comando para testar o acesso aos arquivos[1]:
adb shell appops set --uid org.homesync.app MANAGE_EXTERNAL_STORAGE allow

4. Listar as permissões do app
adb shell appops get --uid org.homesync.app

5. Desfaz o comando 3
adb shell appops set --uid org.homesync.app MANAGE_EXTERNAL_STORAGE default

6. Listar todos os pacotes instalados pelo adb:
adb shell pm list packages

7. Manual de como usar o MANAGE_EXTERNAL_STORAGE [1]

8. Usando o framework framework de acesso ao armazenamento, que é a solução do Ftp Server, pois ele busca uma pasta e dá permissão total nessa pasta, sem precisar de mais permissão. [2]

9. Usando as permissões READ_MEDIA_IMAGES e READ_MEDIA_VIDEO [3]

10. Para usar o MANAGE_EXTERNAL_STORAGE devemos usar é o ACTION_MANAGE_APP_ALL_FILES_ACCESS_PERMISSION [4]

11. Fazer os icones de um App [5]

12. Trocando o icone adaptativo [6]
- Mudar o formato do icone em: App_Resources\Android\src\main\res\drawable\ic_launcher_foreground.xml 
- Mudar a cor do fundo em: App_Resources\Android\src\main\res\values\ic_launcher_background.xml

13. Criar projeto novo:
	ns create meu-projeto-firestore --template @nativescript/template-blank
	
14. Usando o patch-package
	A. Fazer o arquivo patch:
		1. npm install patch-package --save-dev
		2. criar a pasta patches
		3. npx patch-package nome-do-pacote
		4. Adicione postinstall ao package.json para aplicar os patches:
		"scripts": {
			"postinstall": "patch-package"
		}
		5. executar npx patch-package
	B. Usar o patch em um projeto novo:
		1. npm install patch-package --save-dev
		2. criar a pasta patches
		3. copiar o arquivo patch
		4. Adicione postinstall ao package.json para aplicar os patches:
		"scripts": {
			"postinstall": "patch-package"
		}
		5. executar npx patch-package
		
15. Como fazer o deploy para o celular:
	1. Certificar que está na mesma rede do computador.
	2. No modo desenvolvedor ativar depuração por wifi
	3. Parear o dispositivo com um código de pareamento (vai aparecer o IP, a porta e o código)
	4. adb pair ip:porta
	5. config_ambiente.bat
	6. ns debug android OU ns run android OU ns run android --bundle
	
16. Como resolvi o problema de usar o extend. [7][8]

17. Rodar um serviço em segundo plano. [9][10]

18. Comando para descompactar um arquivo apk:
	java -jar C:\Arquivos\Programas\gnuwin\apktool.jar d platforms/android/app/build/outputs/apk/debug/app-debug.apk -o decompiled-apk
	
19. Listar os serviços ativos:
	adb shell dumpsys activity services org.homesync.app
	
20. Conseguir usar sockets na thread principal. [12]

LINKS:
[1] https://developer.android.com/training/data-storage/manage-all-files?hl=pt-br
[2] https://developer.android.com/training/data-storage/shared/documents-files?hl=pt-br#java
[3] https://developer.android.com/training/data-storage/shared/media?hl=pt-br#java
[4] https://stackoverflow.com/questions/65876736/how-do-you-request-manage-external-storage-permission-in-android
[5] https://assetstudio.androidpro.com.br/icons-launcher.html
[6] https://www.svgrepo.com/
[7] https://stackoverflow.com/questions/60642749/nativescript-6-0-android-app-widget-not-working
[8] https://docs.nativescript.org/guide/extending-classes-and-implementing-interfaces-android#extending-android-application
[9] https://stackoverflow.com/questions/76943771/foreground-service-crashing-on-android-14
[10] https://developer.android.com/about/versions/14/changes/fgs-types-required?hl=pt-br#data-sync
[11] https://apktool.org/
[12] https://github.com/nativescript-community/https/issues/25
